\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{sty/SummaryZoom}[]

\newif\ifplain
\DeclareOption{plain}{ \plaintrue }
\ProcessOptions\relax

\RequirePackage{ifthen}
\RequirePackage{stackengine}
\RequirePackage[german]{babel}
\RequirePackage{forarray}
\RequirePackage{pgffor}
\RequirePackage{tikz}
\RequirePackage{lengthconvert}
\RequirePackage{svg}
%\RequirePackage{showkeys}
%\RequirePackage{labelschanged}

\vfuzz=30pt

\def\defaultpreviewscale{.3}% CAN SET THIS AS DESIRED FOR SCALE OF PREVIEW
\def\insetHalignment{c}
\def\insetValignment{t}

%\def\insetHoffset{0pt}
%\def\insetVoffset{0pt}


\def\saveframeHoffset{-22pt}

\def\insetHoffset{-22pt}
\def\insetVoffset{1pt}

\newlength{\framegap}


\geometry{paperwidth=21cm, paperheight=11.81cm}
\setbeamersize{text margin left=0.3cm, text margin right=0.3cm}
\setlength\parindent{0pt}

%
\newcounter{frametotal}
\newcounter{frameindex}
\newcounter{sectionstart}
\setcounter{sectionstart}{0}
\newcounter{lastsecstart}
\setcounter{lastsecstart}{0}
\newcounter{lastsecframes}
\setcounter{lastsecframes}{0}
\newcounter{currentsecframes}
\setcounter{currentsecframes}{0}


\def\maxvalue(#1,#2){\ifnum #1>#2 #1\else #2\fi}

\def\minvalue(#1,#2){\ifnum #1<#2 #1\else #2\fi}


% sframe ENVIRONMENT USED TO SAVE FRAMES in \saveframebox[INDEX]
\newenvironment{sframe}[1]%
{
    \stepcounter{frametotal}%
    \expandafter\newsavebox\expandafter{%
    \csname saveframebox\romannumeral\theframetotal\endcsname}%
    % Save original overlay commands and disable them for clean thumbnails
    \let\oldonslide\onslide%
    \let\oldpause\pause%
    \let\oldonly\only%
    \let\olduncover\uncover%
    \let\oldinvisible\invisible%
    \let\oldvisible\visible%
    \let\oldtemporal\temporal%
    \let\olditem\item%
    % Redefine overlay commands to show final state only using safe non-recursive approach
    \def\pause{}% Complete ignore
    \def\onslide{\@ifnextchar<{\sframe@onslide@angle}{\sframe@onslide@noangle}}%
    \long\def\sframe@onslide@angle<##1>##2{##2}% Show content, ignore overlay spec
    \def\sframe@onslide@noangle##1{}% Ignore non-angle form
    \def\only{\@ifnextchar<{\sframe@only@angle}{\sframe@only@noangle}}%
    \long\def\sframe@only@angle<##1>##2{##2}% Show content, ignore overlay spec  
    \def\sframe@only@noangle##1{}% Ignore non-angle form
    \def\uncover{\@ifnextchar<{\sframe@uncover@angle}{\sframe@uncover@noangle}}%
    \long\def\sframe@uncover@angle<##1>##2{##2}% Show content, ignore overlay spec
    \def\sframe@uncover@noangle##1{}% Ignore non-angle form
    \def\visible{\@ifnextchar<{\sframe@visible@angle}{\sframe@visible@noangle}}%
    \long\def\sframe@visible@angle<##1>##2{##2}% Show content, ignore overlay spec
    \def\sframe@visible@noangle##1{}% Ignore non-angle form
    \def\invisible{\@ifnextchar<{\sframe@invisible@angle}{\sframe@invisible@noangle}}%
    \long\def\sframe@invisible@angle<##1>##2{}% Hide content completely
    \def\sframe@invisible@noangle##1{}% Ignore non-angle form
    \def\temporal{\@ifnextchar<{\sframe@temporal@angle}{\sframe@temporal@noangle}}%
    \long\def\sframe@temporal@angle<##1>##2##3##4{##4}% Show 'after' content
    \long\def\sframe@temporal@noangle##1##2##3{##3}% Show last argument if no angle
    % Handle itemize overlays by redefining item to ignore overlay specs
    \def\item{\@ifnextchar<{\sframe@item@ignoreoverlay}{\olditem}}%
    \def\sframe@item@ignoreoverlay<##1>{\olditem}% Ignore <spec> and use normal item
    \setbox0=\vbox\bgroup\begin{frame}\ifplain [plain] \else {#1} \fi
}
{
    \end{frame}\leavevmode\unskip\setbox0=\lastbox\egroup%
    % Restore original overlay commands
    \let\onslide\oldonslide%
    \let\pause\oldpause%
    \let\only\oldonly%
    \let\uncover\olduncover%
    \let\invisible\oldinvisible%
    \let\visible\oldvisible%
    \let\temporal\oldtemporal%
    \let\item\olditem%
    \global\sbox{\csname saveframebox\romannumeral\theframetotal\endcsname}{\box0}%
}

% Command to define a reusable frame with animations
% Usage: \definesframe{title}{frame content with animations}
\newcommand{\definesframe}[2]{%
    \stepcounter{frametotal}%
    % Store the frame title
    \expandafter\gdef\csname sframetitle\romannumeral\theframetotal\endcsname{#1}%
    % Store the frame content
    \expandafter\long\expandafter\gdef\csname sframecontent\romannumeral\theframetotal\endcsname{#2}%
    % Create the savebox version (without animations for thumbnails)
    \expandafter\newsavebox\expandafter{%
        \csname saveframebox\romannumeral\theframetotal\endcsname}%
    % Create static version for thumbnails with proper overlay neutralization
    % Save original overlay commands
    \let\oldonslide\onslide%
    \let\oldpause\pause%
    \let\oldonly\only%
    \let\olduncover\uncover%
    \let\oldinvisible\invisible%
    \let\oldvisible\visible%
    \let\oldtemporal\temporal%
    \let\olditem\item%
    % Safely redefine overlay commands to avoid recursion
    \def\pause{}% Complete ignore
    \def\onslide{\@ifnextchar<{\definesframe@onslide@angle}{\definesframe@onslide@noangle}}%
    \long\def\definesframe@onslide@angle<##1>##2{##2}% Show content, ignore overlay spec
    \def\definesframe@onslide@noangle##1{}% Ignore non-angle form
    \def\only{\@ifnextchar<{\definesframe@only@angle}{\definesframe@only@noangle}}%
    \long\def\definesframe@only@angle<##1>##2{##2}% Show content, ignore overlay spec  
    \def\definesframe@only@noangle##1{}% Ignore non-angle form
    \def\uncover{\@ifnextchar<{\definesframe@uncover@angle}{\definesframe@uncover@noangle}}%
    \long\def\definesframe@uncover@angle<##1>##2{##2}% Show content, ignore overlay spec
    \def\definesframe@uncover@noangle##1{}% Ignore non-angle form
    \def\visible{\@ifnextchar<{\definesframe@visible@angle}{\definesframe@visible@noangle}}%
    \long\def\definesframe@visible@angle<##1>##2{##2}% Show content, ignore overlay spec
    \def\definesframe@visible@noangle##1{}% Ignore non-angle form
    \def\invisible{\@ifnextchar<{\definesframe@invisible@angle}{\definesframe@invisible@noangle}}%
    \long\def\definesframe@invisible@angle<##1>##2{}% Hide content completely
    \def\definesframe@invisible@noangle##1{}% Ignore non-angle form
    \def\temporal{\@ifnextchar<{\definesframe@temporal@angle}{\definesframe@temporal@noangle}}%
    \long\def\definesframe@temporal@angle<##1>##2##3##4{##4}% Show 'after' content
    \long\def\definesframe@temporal@noangle##1##2##3{##3}% Show last argument if no angle
    % Handle itemize overlays by redefining item to ignore overlay specs
    \def\item{\@ifnextchar<{\definesframe@item@ignoreoverlay}{\olditem}}%
    \def\definesframe@item@ignoreoverlay<##1>{\olditem}% Ignore <spec> and use normal item
    % Create the frame using the same approach as sframe environment
    \setbox0=\vbox\bgroup\begin{frame}\ifplain[plain]\else{#1}\fi#2\end{frame}\leavevmode\unskip\setbox0=\lastbox\egroup%
    \global\sbox{\csname saveframebox\romannumeral\theframetotal\endcsname}{\box0}%
    % Restore original overlay commands
    \let\onslide\oldonslide%
    \let\pause\oldpause%
    \let\only\oldonly%
    \let\uncover\olduncover%
    \let\invisible\oldinvisible%
    \let\visible\oldvisible%
    \let\temporal\oldtemporal%
    \let\item\olditem%
}

% WHILE USED FOR PREVIEW MODE, \savedframe[scale]{frame #} CAN ALSO BE USED
% TO RECALL PRIOR FRAMES
\newcommand\savedframe[3][\defaultpreviewscale]
{
    \hspace{\saveframeHoffset+#3}
    \fboxsep=0pt
    % Debug: show what we're linking to
    %sframe:\romannumeral#2
    \hyperlink{sframe:\romannumeral#2}{%
        \fbox{
            \pgfmathparse{#1 * (\textwidth/ \paperwidth)}
            \scalebox{\pgfmathresult}{\hspace{0pt}{
                \usebox{
                    \csname saveframebox\romannumeral#2\endcsname
                }
                }
            }
        }
    }
}

% WILL RECITE ALL sframes, USING PREVIEW MODE IF [P] IS THE OPTIONAL ARGUMENT
\newcommand\reciteframes
{%
    \setcounter{frameindex}{0}%
    \whiledo{\value{frameindex}<\numexpr\value{frametotal}-1\relax}{%
        \stepcounter{frameindex}%
        \begin{frame}\ifplain[plain]\fi
         \label{sframe:\romannumeral\theframeindex}
         \hypertarget{sframe:\romannumeral\theframeindex}{}
            \previewinset{\insetHalignment}{\insetHoffset}{\insetValignment}{\insetVoffset}%
            {\savedframe[\defaultpreviewscale]{\numexpr\value{frameindex}+1\relax}{\saveframeHoffset}}%
            {\usebox{\csname saveframebox\romannumeral\theframeindex\endcsname}}%
        \end{frame}
    }%
    \stepcounter{frameindex}%
    \begin{frame}\ifplain[plain]\fi
         \label{sframe:\romannumeral\theframeindex}
         \hypertarget{sframe:\romannumeral\theframeindex}{}
        \usebox{\csname saveframebox\romannumeral\theframetotal\endcsname}%
    \end{frame}
}% WILL RECITE ONE frames, USING PREVIEW MODE IF [P] IS THE OPTIONAL ARGUMENT

\newcommand\reciteframe[1][\numexpr\theframeindex+1\relax]{%
    \setcounter{frameindex}{#1}%
    \ifnum\value{frameindex}<\numexpr\value{frametotal}\relax{%
        % Check if frame has stored content (for animations)
        \ifcsname sframecontent\romannumeral\theframeindex\endcsname%
            % Use stored content with live animations
            % Set the label on the first slide of the animation sequence
            \begin{frame}\ifplain[plain]\else\frametitle{\csname sframetitle\romannumeral\theframeindex\endcsname}\fi
                \label{sframe:\romannumeral\theframeindex}
                \hypertarget{sframe:\romannumeral\theframeindex}{}
                \csname sframecontent\romannumeral\theframeindex\endcsname%
            \end{frame}
        \else%
            % Use traditional method with preview inset
            \begin{frame}\ifplain[plain]\fi
                \label{sframe:\romannumeral\theframeindex}
                \hypertarget{sframe:\romannumeral\theframeindex}{}
                \previewinset{
                    \insetHalignment}{
                    \insetHoffset}{
                    \insetValignment}{
                    \insetVoffset
                }{
                    \savedframe[\defaultpreviewscale]{
                        \numexpr\value{frameindex}+1\relax
                    }{\saveframeHoffset}
                }{
                    \usebox{\csname saveframebox\romannumeral\theframeindex\endcsname}
                }%
            \end{frame}
        \fi%
    }
    \else%
        % Last frame - check if it has stored content  
        \ifcsname sframecontent\romannumeral\theframetotal\endcsname%
            \begin{frame}\ifplain[plain]\else\frametitle{\csname sframetitle\romannumeral\theframeindex\endcsname}\fi
            \onslide<1>{\label{sframe:\romannumeral\theframetotal}\hypertarget{sframe:\romannumeral\theframetotal}{}} 
                %\label{sframe:\romannumeral\theframetotal}
                \csname sframecontent\romannumeral\theframetotal\endcsname%
            \end{frame}
        \else%
            \begin{frame}\ifplain[plain]\fi
                \onslide<1>{\label{sframe:\romannumeral\theframetotal}\hypertarget{sframe:\romannumeral\theframetotal}{}} 
                \usebox{\csname saveframebox\romannumeral\theframetotal\endcsname}%
            \end{frame}
        \fi%
    \fi%
}


\newcommand{\summaryzoom}[2]{
    \begin{frame}[plain]
            \centering
            \ifthenelse{\boolean{#2}}{
                \ifthenelse{\value{lastsecstart}=\value{sectionstart}}{}{
                    %%%%%%%%%%% lastsecframes %%%%%%%%%%% 
                    \setcounter{lastsecframes}{\the\numexpr(\value{sectionstart}-\value{lastsecstart})}                    
                    %%%%%%%%%%% \framewidth %%%%%%%%%%% 
                    \pgfmathparse{0.85/\maxvalue(\value{lastsecframes},2)} \edef\framewidth{\pgfmathresult}
                    %%%%%%%%%%% \gapwidth %%%%%%%%%%% 
                    \pgfmathparse{0.05*\framewidth} \edef\gapwidth{\pgfmathresult}  
                    %%%%%%%%%%% \indentWidth %%%%%%%%%%% 
                    \pgfmathparse{-\saveframeHoffset-\gapwidth\textwidth} \edef\indentWidth{\pgfmathresult}
                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
                    \hspace{\indentWidth pt}
                    \foreach \i in {\the\numexpr\value{lastsecstart}+1,...,\value{sectionstart}} {
                        \savedframe[\framewidth]{\i}{\gapwidth\textwidth}
                    }
                    
                    \vfill
                }
                %%%%%%%%%%% currentsecframes %%%%%%%%%%% 
                \setcounter{currentsecframes}{\the\numexpr(\value{frametotal}-\value{sectionstart})}
                %%%%%%%%%%% \framewidth %%%%%%%%%%% 
                \pgfmathparse{0.85/\maxvalue(\value{currentsecframes},2)} \edef\framewidth{\pgfmathresult} % float version  
                %%%%%%%%%%% \gapwidth %%%%%%%%%%% 
                \pgfmathparse{0.05*\framewidth} \edef\gapwidth{\pgfmathresult}  
                %%%%%%%%%%% \indentWidth %%%%%%%%%%% 
                \pgfmathparse{-\saveframeHoffset-\gapwidth\textwidth} \edef\indentWidth{\pgfmathresult}
                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
                \hspace{\indentWidth pt}
                \foreach \i in {\the\numexpr\value{sectionstart}+1,...,\value{frametotal}} {
                        \savedframe[\framewidth]{\i}{\gapwidth\textwidth}
                }
            }{
                %%%%%%%%%%% currentsecframes %%%%%%%%%%% 
                \setcounter{currentsecframes}{\the\numexpr(\value{frametotal}-\value{sectionstart})} 
                %%%%%%%%%%% break if >3 frames %%%%%%%%%%% 
                \ifthenelse{\value{currentsecframes}>3}{
                    %%%%%%%%%%% \framewidth %%%%%%%%%%% 
                    \pgfmathparse{int(round(\value{currentsecframes}/2))}
                    \pgfmathparse{0.85/\maxvalue(\pgfmathresult,2)}
                    \edef\framewidth{\pgfmathresult}
                    %%%%%%%%%%% \gapwidth %%%%%%%%%%% 
                    \pgfmathparse{0.05*\framewidth} \edef\gapwidth{\pgfmathresult}
                    %%%%%%%%%%% \midFrame %%%%%%%%%%% 
                    \pgfmathparse{int(round(\value{sectionstart}+\value{currentsecframes}/2))} \edef\midFrame{\pgfmathresult}
                    %%%%%%%%%%% \indentWidth %%%%%%%%%%% 
                    \pgfmathparse{-\saveframeHoffset-\gapwidth\textwidth}
                    \edef\indentWidth{\pgfmathresult}
                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
                    \hspace{\indentWidth pt}
                    \foreach \i in {\the\numexpr\value{sectionstart}+1,...,\midFrame} {
                        \savedframe[\framewidth]{\i}{\gapwidth\textwidth}
                    }

                    %%%%%%%%%%% Linebreak %%%%%%%%%%% 
                    
                    \vspace{\gapwidth\textwidth}
                    \hspace{\indentWidth pt}
                    \foreach \i in {\the\numexpr\midFrame+1,...,\value{frametotal}} {
                        \savedframe[\framewidth]{\i}{\gapwidth\textwidth}
                    }
                }{
                    %%%%%%%%%%% \framewidth %%%%%%%%%%% 
                    \pgfmathparse{0.85/\maxvalue(\value{currentsecframes},2)} \edef\framewidth{\pgfmathresult}  
                    %%%%%%%%%%% \gapwidth %%%%%%%%%%% 
                    \pgfmathparse{0.05*\framewidth} \edef\gapwidth{\pgfmathresult}  
                    %%%%%%%%%%% \indentWidth %%%%%%%%%%% 
                    \pgfmathparse{-\saveframeHoffset-\gapwidth\textwidth} \edef\indentWidth{\pgfmathresult}
                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
                    \hspace{\indentWidth pt}
                    \foreach \i in {\the\numexpr\value{sectionstart}+1,...,\value{frametotal}} {
                        \savedframe[\framewidth]{\i}{\gapwidth\textwidth}
                    }
                }
            }
    \end{frame}
}


% ALLOW PREVIEW MODE TO BE TURNED ON [T] OPTION OR OFF [F]
\newcommand\previewmode[1][T]{%
  \ifx T#1\let\previewinset\stackinset\else\renewcommand\previewinset[6]{##6}\fi
}

\previewmode

\previewmode[F]


% recite all sframes since the last summary zoom
\newcommand{\recitesection}{
    \setcounter{frameindex}{\value{sectionstart}}%
    \whiledo{\value{frameindex}<\value{frametotal}}{%
        \stepcounter{frameindex}%
        \reciteframe[\theframeindex]%
    }%
}

% #1 Title
% #2 bool: repeat after slides 
% #3 bool: show previous
% #4 Content
\newcommand{\Zoom}[4]{
    \setcounter{lastsecstart}{\value{sectionstart}}
    \setcounter{sectionstart}{\value{frametotal}}
    #4
    \summaryzoom{#1}{#3}
    \recitesection    
    \ifthenelse{\boolean{#2}}{
        \summaryzoom{#1}{#3}
    }{}
}


% #1 Title
% #2 bool: repeat after slides 
% #3 bool: show previous
% #4 Content
\newcommand{\ZoomSection}[4]{
    \section{#1}
    \Zoom{#1}{#2}{#3}{#4}
}