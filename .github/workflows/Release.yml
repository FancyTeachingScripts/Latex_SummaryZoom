# Workflow to compile LaTeX document and attach PDF to releases

name: Compile and Release PDF

# Controls when the workflow will run
on:
  # Triggers the workflow on push to any branch
  push:
  # Triggers the workflow when a release is created
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job to prepare the LaTeX files (convert SVG and modify LaTeX)
  prepare:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Convert SVG to PDF and modify LaTeX to use it directly
      - name: Convert SVG to PDF and prepare LaTeX
        run: |
          sudo apt update
          sudo apt install -y inkscape
          # Convert the SVG to PDF with a simple name
          inkscape --export-type=pdf --export-filename=sty/logo.pdf sty/logo.svg
          ls -la sty/logo.pdf
          # Create a backup of main.tex and modify it to use PDF instead of SVG
          cp main.tex main.tex.bak
          # Replace all includesvg commands with includegraphics, preserving the width parameter
          sed -i 's/\\includesvg\[\([^]]*\)\]{sty\/logo\.svg}/\\includegraphics[\1]{sty\/logo.pdf}/g' main.tex
          echo "Modified main.tex to use PDF instead of SVG"
          echo "Changes made:"
          grep -n "includegraphics.*logo" main.tex || echo "No includegraphics found"
          echo "Remaining includesvg commands:"
          grep -n "includesvg" main.tex || echo "All includesvg commands replaced"

      # Upload prepared files for the compile job
      - name: Upload prepared files
        uses: actions/upload-artifact@v4
        with:
          name: prepared-latex-files
          path: |
            main.tex
            sty/
          retention-days: 1
          compression-level: 0

  # Job to compile the LaTeX document
  compile:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      # Download the prepared files
      - name: Download prepared files
        uses: actions/download-artifact@v4
        with:
          name: prepared-latex-files

      # Compile LaTeX document to PDF using XeLaTeX
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          compiler: xelatex

      # Upload compiled PDF for other jobs
      - name: Upload compiled PDF
        uses: actions/upload-artifact@v4
        with:
          name: compiled-pdf
          path: main.pdf
          retention-days: 1
          compression-level: 0

  # Job to upload PDF as artifact (runs after compilation)
  upload-artifact:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      # Download the compiled PDF
      - name: Download compiled PDF
        uses: actions/download-artifact@v4
        with:
          name: compiled-pdf

      # Upload PDF as job artifact with longer retention
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: SummaryZoom-PDF
          path: main.pdf
          compression-level: 0

  # Job to upload PDF to release (only runs on release events)
  upload-release:
    runs-on: ubuntu-latest
    needs: compile
    if: github.event_name == 'release'
    steps:
      # Download the compiled PDF
      - name: Download compiled PDF
        uses: actions/download-artifact@v4
        with:
          name: compiled-pdf

      # Upload PDF to release assets
      - name: Upload PDF to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./main.pdf
          asset_name: SummaryZoom.pdf
          asset_content_type: application/pdf
