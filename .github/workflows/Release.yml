# Workflow to compile LaTeX document and attach PDF to releases

name: Compile and Release PDF

# Controls when the workflow will run
on:
  [push]
  # Triggers the workflow when a release is created
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Convert SVG to PDF and modify LaTeX to use it directly
      - name: Convert SVG to PDF and prepare LaTeX
        run: |
          sudo apt update
          sudo apt install -y inkscape
          # Convert the SVG to PDF with a simple name
          inkscape --export-type=pdf --export-filename=sty/logo.pdf sty/logo.svg
          ls -la sty/logo.pdf
          # Create a backup of main.tex and modify it to use PDF instead of SVG
          cp main.tex main.tex.bak
          # Replace all includesvg commands with includegraphics, preserving the width parameter
          sed -i 's/\\includesvg\[\([^]]*\)\]{sty\/logo\.svg}/\\includegraphics[\1]{sty\/logo.pdf}/g' main.tex
          echo "Modified main.tex to use PDF instead of SVG"
          echo "Changes made:"
          grep -n "includegraphics.*logo" main.tex || echo "No includegraphics found"
          echo "Remaining includesvg commands:"
          grep -n "includesvg" main.tex || echo "All includesvg commands replaced"

      # Compile LaTeX document to PDF using XeLaTeX
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          compiler: xelatex

      # Always upload PDF as job artifact
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: SummaryZoom-PDF
          path: main.pdf
          retention-days: 90

      # Upload PDF to release assets
      - name: Upload PDF to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./main.pdf
          asset_name: SummaryZoom.pdf
          asset_content_type: application/pdf
